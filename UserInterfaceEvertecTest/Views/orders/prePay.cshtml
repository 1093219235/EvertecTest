@model BusinessEvertecTest.DTO.ordersDTO

@{
    ViewBag.Title = "Edit";
}

<h2>Informacion de tu orden</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Orden</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.customer_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.customer_name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.customer_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.customer_email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.customer_email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.customer_email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.customer_mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.customer_mobile, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.customer_mobile, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="editor-field">
            <!-- change to HiddenFor in existing div editor-field -->
            @Html.HiddenFor(model => model.status)
            @Html.ValidationMessageFor(model => model.status)
        </div>
        <div class="editor-field">
            <!-- change to HiddenFor in existing div editor-field -->
            @Html.HiddenFor(model => model.user_email)
            @Html.ValidationMessageFor(model => model.user_email)
        </div>

        <div class="editor-field">
            <!-- change to HiddenFor in existing div editor-field -->
            @Html.HiddenFor(model => model.created_at)
            @Html.ValidationMessageFor(model => model.created_at)
        </div>
        <div class="editor-field">
            <!-- change to HiddenFor in existing div editor-field -->
            @Html.HiddenFor(model => model.updated_at)
            @Html.ValidationMessageFor(model => model.updated_at)
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Pagar" class="btn btn-success" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
